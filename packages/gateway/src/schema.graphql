scalar DateTime

type User {
  id: ID!
  name: String!
  email: String!
}

type ProductVariation {
  sku: String!
  name: String!
  colorPatch: String!
  size: String!
  quantity: Int!
  images: [String!]!
}

enum ProductStatus {
  NORMAL
  NEW_ARRIVAL
  BEST_SELLER
  FEATURED
}

type Item {
  id: ID!
  name: String!
  description: String!
  featuredImage: String!
  price: Int!
  discountedPrice: Int
  status: ProductStatus
  products: [ProductVariation!]!
  relatedProducts: [ID!]!
  createAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  items: [Item]!
  user(id: String!): User
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input CreateItemInput {
  name: String!
  description: String!
  price: Int!
  image: String!
}

type Mutation {
  createUser(args: CreateUserInput!): User!
  createItem(args: CreateItemInput!): Item!
}
